import { RequiredBy, DirectionProperty, CommonProperties, Context, PropTypes, NormalizeProps } from '@zag-js/types';
import * as _zag_js_core from '@zag-js/core';
import { StateMachine, Machine } from '@zag-js/core';
import { PositioningOptions } from '@zag-js/popper';
import { Point } from '@zag-js/rect-utils';

declare const anatomy: Omit<{
    parts: <U extends string>(...parts: U[]) => Omit<{
        parts: any;
        extendWith: <V extends string>(...parts: V[]) => Omit<{
            parts: any;
            extendWith: <V_1 extends string>(...parts: V_1[]) => Omit<{
                parts: any;
                extendWith: <V_2 extends string>(...parts: V_2[]) => Omit<{
                    parts: any;
                    extendWith: <V_3 extends string>(...parts: V_3[]) => Omit<{
                        parts: any;
                        extendWith: <V_4 extends string>(...parts: V_4[]) => Omit<{
                            parts: any;
                            extendWith: <V_5 extends string>(...parts: V_5[]) => Omit<{
                                parts: any;
                                extendWith: <V_6 extends string>(...parts: V_6[]) => Omit<{
                                    parts: any;
                                    extendWith: <V_7 extends string>(...parts: V_7[]) => Omit<{
                                        parts: any;
                                        extendWith: <V_8 extends string>(...parts: V_8[]) => Omit<{
                                            parts: any;
                                            extendWith: <V_9 extends string>(...parts: V_9[]) => Omit<any, "parts">;
                                            build: () => Record<U | V | V_1 | V_2 | V_3 | V_4 | V_5 | V_6 | V_7 | V_8, {
                                                selector: string;
                                                attrs: Record<"data-scope" | "data-part", string>;
                                            }>;
                                        }, "parts">;
                                        build: () => Record<U | V | V_1 | V_2 | V_3 | V_4 | V_5 | V_6 | V_7, {
                                            selector: string;
                                            attrs: Record<"data-scope" | "data-part", string>;
                                        }>;
                                    }, "parts">;
                                    build: () => Record<U | V | V_1 | V_2 | V_3 | V_4 | V_5 | V_6, {
                                        selector: string;
                                        attrs: Record<"data-scope" | "data-part", string>;
                                    }>;
                                }, "parts">;
                                build: () => Record<U | V | V_1 | V_2 | V_3 | V_4 | V_5, {
                                    selector: string;
                                    attrs: Record<"data-scope" | "data-part", string>;
                                }>;
                            }, "parts">;
                            build: () => Record<U | V | V_1 | V_2 | V_3 | V_4, {
                                selector: string;
                                attrs: Record<"data-scope" | "data-part", string>;
                            }>;
                        }, "parts">;
                        build: () => Record<U | V | V_1 | V_2 | V_3, {
                            selector: string;
                            attrs: Record<"data-scope" | "data-part", string>;
                        }>;
                    }, "parts">;
                    build: () => Record<U | V | V_1 | V_2, {
                        selector: string;
                        attrs: Record<"data-scope" | "data-part", string>;
                    }>;
                }, "parts">;
                build: () => Record<U | V | V_1, {
                    selector: string;
                    attrs: Record<"data-scope" | "data-part", string>;
                }>;
            }, "parts">;
            build: () => Record<U | V, {
                selector: string;
                attrs: Record<"data-scope" | "data-part", string>;
            }>;
        }, "parts">;
        build: () => Record<U, {
            selector: string;
            attrs: Record<"data-scope" | "data-part", string>;
        }>;
    }, "parts">;
    extendWith: <V_10 extends string>(...parts: V_10[]) => Omit<{
        parts: <U extends string>(...parts: U[]) => Omit<{
            parts: any;
            extendWith: <V extends string>(...parts: V[]) => Omit<{
                parts: any;
                extendWith: <V_1 extends string>(...parts: V_1[]) => Omit<{
                    parts: any;
                    extendWith: <V_2 extends string>(...parts: V_2[]) => Omit<{
                        parts: any;
                        extendWith: <V_3 extends string>(...parts: V_3[]) => Omit<{
                            parts: any;
                            extendWith: <V_4 extends string>(...parts: V_4[]) => Omit<{
                                parts: any;
                                extendWith: <V_5 extends string>(...parts: V_5[]) => Omit<{
                                    parts: any;
                                    extendWith: <V_6 extends string>(...parts: V_6[]) => Omit<{
                                        parts: any;
                                        extendWith: <V_7 extends string>(...parts: V_7[]) => Omit<{
                                            parts: any;
                                            extendWith: <V_8 extends string>(...parts: V_8[]) => Omit<{
                                                parts: any;
                                                extendWith: <V_9 extends string>(...parts: V_9[]) => Omit<any, "parts">;
                                                build: () => Record<U | V | V_1 | V_2 | V_3 | V_4 | V_5 | V_6 | V_7 | V_8, {
                                                    selector: string;
                                                    attrs: Record<"data-scope" | "data-part", string>;
                                                }>;
                                            }, "parts">;
                                            build: () => Record<U | V | V_1 | V_2 | V_3 | V_4 | V_5 | V_6 | V_7, {
                                                selector: string;
                                                attrs: Record<"data-scope" | "data-part", string>;
                                            }>;
                                        }, "parts">;
                                        build: () => Record<U | V | V_1 | V_2 | V_3 | V_4 | V_5 | V_6, {
                                            selector: string;
                                            attrs: Record<"data-scope" | "data-part", string>;
                                        }>;
                                    }, "parts">;
                                    build: () => Record<U | V | V_1 | V_2 | V_3 | V_4 | V_5, {
                                        selector: string;
                                        attrs: Record<"data-scope" | "data-part", string>;
                                    }>;
                                }, "parts">;
                                build: () => Record<U | V | V_1 | V_2 | V_3 | V_4, {
                                    selector: string;
                                    attrs: Record<"data-scope" | "data-part", string>;
                                }>;
                            }, "parts">;
                            build: () => Record<U | V | V_1 | V_2 | V_3, {
                                selector: string;
                                attrs: Record<"data-scope" | "data-part", string>;
                            }>;
                        }, "parts">;
                        build: () => Record<U | V | V_1 | V_2, {
                            selector: string;
                            attrs: Record<"data-scope" | "data-part", string>;
                        }>;
                    }, "parts">;
                    build: () => Record<U | V | V_1, {
                        selector: string;
                        attrs: Record<"data-scope" | "data-part", string>;
                    }>;
                }, "parts">;
                build: () => Record<U | V, {
                    selector: string;
                    attrs: Record<"data-scope" | "data-part", string>;
                }>;
            }, "parts">;
            build: () => Record<U, {
                selector: string;
                attrs: Record<"data-scope" | "data-part", string>;
            }>;
        }, "parts">;
        extendWith: <V_11 extends string>(...parts: V_11[]) => Omit<{
            parts: <U extends string>(...parts: U[]) => Omit<{
                parts: any;
                extendWith: <V extends string>(...parts: V[]) => Omit<{
                    parts: any;
                    extendWith: <V_1 extends string>(...parts: V_1[]) => Omit<{
                        parts: any;
                        extendWith: <V_2 extends string>(...parts: V_2[]) => Omit<{
                            parts: any;
                            extendWith: <V_3 extends string>(...parts: V_3[]) => Omit<{
                                parts: any;
                                extendWith: <V_4 extends string>(...parts: V_4[]) => Omit<{
                                    parts: any;
                                    extendWith: <V_5 extends string>(...parts: V_5[]) => Omit<{
                                        parts: any;
                                        extendWith: <V_6 extends string>(...parts: V_6[]) => Omit<{
                                            parts: any;
                                            extendWith: <V_7 extends string>(...parts: V_7[]) => Omit<{
                                                parts: any;
                                                extendWith: <V_8 extends string>(...parts: V_8[]) => Omit<{
                                                    parts: any;
                                                    extendWith: <V_9 extends string>(...parts: V_9[]) => Omit<any, "parts">;
                                                    build: () => Record<U | V | V_1 | V_2 | V_3 | V_4 | V_5 | V_6 | V_7 | V_8, {
                                                        selector: string;
                                                        attrs: Record<"data-scope" | "data-part", string>;
                                                    }>;
                                                }, "parts">;
                                                build: () => Record<U | V | V_1 | V_2 | V_3 | V_4 | V_5 | V_6 | V_7, {
                                                    selector: string;
                                                    attrs: Record<"data-scope" | "data-part", string>;
                                                }>;
                                            }, "parts">;
                                            build: () => Record<U | V | V_1 | V_2 | V_3 | V_4 | V_5 | V_6, {
                                                selector: string;
                                                attrs: Record<"data-scope" | "data-part", string>;
                                            }>;
                                        }, "parts">;
                                        build: () => Record<U | V | V_1 | V_2 | V_3 | V_4 | V_5, {
                                            selector: string;
                                            attrs: Record<"data-scope" | "data-part", string>;
                                        }>;
                                    }, "parts">;
                                    build: () => Record<U | V | V_1 | V_2 | V_3 | V_4, {
                                        selector: string;
                                        attrs: Record<"data-scope" | "data-part", string>;
                                    }>;
                                }, "parts">;
                                build: () => Record<U | V | V_1 | V_2 | V_3, {
                                    selector: string;
                                    attrs: Record<"data-scope" | "data-part", string>;
                                }>;
                            }, "parts">;
                            build: () => Record<U | V | V_1 | V_2, {
                                selector: string;
                                attrs: Record<"data-scope" | "data-part", string>;
                            }>;
                        }, "parts">;
                        build: () => Record<U | V | V_1, {
                            selector: string;
                            attrs: Record<"data-scope" | "data-part", string>;
                        }>;
                    }, "parts">;
                    build: () => Record<U | V, {
                        selector: string;
                        attrs: Record<"data-scope" | "data-part", string>;
                    }>;
                }, "parts">;
                build: () => Record<U, {
                    selector: string;
                    attrs: Record<"data-scope" | "data-part", string>;
                }>;
            }, "parts">;
            extendWith: <V_12 extends string>(...parts: V_12[]) => Omit<{
                parts: <U extends string>(...parts: U[]) => Omit<{
                    parts: any;
                    extendWith: <V extends string>(...parts: V[]) => Omit<{
                        parts: any;
                        extendWith: <V_1 extends string>(...parts: V_1[]) => Omit<{
                            parts: any;
                            extendWith: <V_2 extends string>(...parts: V_2[]) => Omit<{
                                parts: any;
                                extendWith: <V_3 extends string>(...parts: V_3[]) => Omit<{
                                    parts: any;
                                    extendWith: <V_4 extends string>(...parts: V_4[]) => Omit<{
                                        parts: any;
                                        extendWith: <V_5 extends string>(...parts: V_5[]) => Omit<{
                                            parts: any;
                                            extendWith: <V_6 extends string>(...parts: V_6[]) => Omit<{
                                                parts: any;
                                                extendWith: <V_7 extends string>(...parts: V_7[]) => Omit<{
                                                    parts: any;
                                                    extendWith: <V_8 extends string>(...parts: V_8[]) => Omit<{
                                                        parts: any;
                                                        extendWith: <V_9 extends string>(...parts: V_9[]) => Omit<any, "parts">;
                                                        build: () => Record<U | V | V_1 | V_2 | V_3 | V_4 | V_5 | V_6 | V_7 | V_8, {
                                                            selector: string;
                                                            attrs: Record<"data-scope" | "data-part", string>;
                                                        }>;
                                                    }, "parts">;
                                                    build: () => Record<U | V | V_1 | V_2 | V_3 | V_4 | V_5 | V_6 | V_7, {
                                                        selector: string;
                                                        attrs: Record<"data-scope" | "data-part", string>;
                                                    }>;
                                                }, "parts">;
                                                build: () => Record<U | V | V_1 | V_2 | V_3 | V_4 | V_5 | V_6, {
                                                    selector: string;
                                                    attrs: Record<"data-scope" | "data-part", string>;
                                                }>;
                                            }, "parts">;
                                            build: () => Record<U | V | V_1 | V_2 | V_3 | V_4 | V_5, {
                                                selector: string;
                                                attrs: Record<"data-scope" | "data-part", string>;
                                            }>;
                                        }, "parts">;
                                        build: () => Record<U | V | V_1 | V_2 | V_3 | V_4, {
                                            selector: string;
                                            attrs: Record<"data-scope" | "data-part", string>;
                                        }>;
                                    }, "parts">;
                                    build: () => Record<U | V | V_1 | V_2 | V_3, {
                                        selector: string;
                                        attrs: Record<"data-scope" | "data-part", string>;
                                    }>;
                                }, "parts">;
                                build: () => Record<U | V | V_1 | V_2, {
                                    selector: string;
                                    attrs: Record<"data-scope" | "data-part", string>;
                                }>;
                            }, "parts">;
                            build: () => Record<U | V | V_1, {
                                selector: string;
                                attrs: Record<"data-scope" | "data-part", string>;
                            }>;
                        }, "parts">;
                        build: () => Record<U | V, {
                            selector: string;
                            attrs: Record<"data-scope" | "data-part", string>;
                        }>;
                    }, "parts">;
                    build: () => Record<U, {
                        selector: string;
                        attrs: Record<"data-scope" | "data-part", string>;
                    }>;
                }, "parts">;
                extendWith: <V_13 extends string>(...parts: V_13[]) => Omit<{
                    parts: <U extends string>(...parts: U[]) => Omit<{
                        parts: any;
                        extendWith: <V extends string>(...parts: V[]) => Omit<{
                            parts: any;
                            extendWith: <V_1 extends string>(...parts: V_1[]) => Omit<{
                                parts: any;
                                extendWith: <V_2 extends string>(...parts: V_2[]) => Omit<{
                                    parts: any;
                                    extendWith: <V_3 extends string>(...parts: V_3[]) => Omit<{
                                        parts: any;
                                        extendWith: <V_4 extends string>(...parts: V_4[]) => Omit<{
                                            parts: any;
                                            extendWith: <V_5 extends string>(...parts: V_5[]) => Omit<{
                                                parts: any;
                                                extendWith: <V_6 extends string>(...parts: V_6[]) => Omit<{
                                                    parts: any;
                                                    extendWith: <V_7 extends string>(...parts: V_7[]) => Omit<{
                                                        parts: any;
                                                        extendWith: <V_8 extends string>(...parts: V_8[]) => Omit<{
                                                            parts: any;
                                                            extendWith: <V_9 extends string>(...parts: V_9[]) => Omit<any, "parts">;
                                                            build: () => Record<U | V | V_1 | V_2 | V_3 | V_4 | V_5 | V_6 | V_7 | V_8, {
                                                                selector: string;
                                                                attrs: Record<"data-scope" | "data-part", string>;
                                                            }>;
                                                        }, "parts">;
                                                        build: () => Record<U | V | V_1 | V_2 | V_3 | V_4 | V_5 | V_6 | V_7, {
                                                            selector: string;
                                                            attrs: Record<"data-scope" | "data-part", string>;
                                                        }>;
                                                    }, "parts">;
                                                    build: () => Record<U | V | V_1 | V_2 | V_3 | V_4 | V_5 | V_6, {
                                                        selector: string;
                                                        attrs: Record<"data-scope" | "data-part", string>;
                                                    }>;
                                                }, "parts">;
                                                build: () => Record<U | V | V_1 | V_2 | V_3 | V_4 | V_5, {
                                                    selector: string;
                                                    attrs: Record<"data-scope" | "data-part", string>;
                                                }>;
                                            }, "parts">;
                                            build: () => Record<U | V | V_1 | V_2 | V_3 | V_4, {
                                                selector: string;
                                                attrs: Record<"data-scope" | "data-part", string>;
                                            }>;
                                        }, "parts">;
                                        build: () => Record<U | V | V_1 | V_2 | V_3, {
                                            selector: string;
                                            attrs: Record<"data-scope" | "data-part", string>;
                                        }>;
                                    }, "parts">;
                                    build: () => Record<U | V | V_1 | V_2, {
                                        selector: string;
                                        attrs: Record<"data-scope" | "data-part", string>;
                                    }>;
                                }, "parts">;
                                build: () => Record<U | V | V_1, {
                                    selector: string;
                                    attrs: Record<"data-scope" | "data-part", string>;
                                }>;
                            }, "parts">;
                            build: () => Record<U | V, {
                                selector: string;
                                attrs: Record<"data-scope" | "data-part", string>;
                            }>;
                        }, "parts">;
                        build: () => Record<U, {
                            selector: string;
                            attrs: Record<"data-scope" | "data-part", string>;
                        }>;
                    }, "parts">;
                    extendWith: <V_14 extends string>(...parts: V_14[]) => Omit<{
                        parts: <U extends string>(...parts: U[]) => Omit<{
                            parts: any;
                            extendWith: <V extends string>(...parts: V[]) => Omit<{
                                parts: any;
                                extendWith: <V_1 extends string>(...parts: V_1[]) => Omit<{
                                    parts: any;
                                    extendWith: <V_2 extends string>(...parts: V_2[]) => Omit<{
                                        parts: any;
                                        extendWith: <V_3 extends string>(...parts: V_3[]) => Omit<{
                                            parts: any;
                                            extendWith: <V_4 extends string>(...parts: V_4[]) => Omit<{
                                                parts: any;
                                                extendWith: <V_5 extends string>(...parts: V_5[]) => Omit<{
                                                    parts: any;
                                                    extendWith: <V_6 extends string>(...parts: V_6[]) => Omit<{
                                                        parts: any;
                                                        extendWith: <V_7 extends string>(...parts: V_7[]) => Omit<{
                                                            parts: any;
                                                            extendWith: <V_8 extends string>(...parts: V_8[]) => Omit<{
                                                                parts: any;
                                                                extendWith: <V_9 extends string>(...parts: V_9[]) => Omit<any, "parts">;
                                                                build: () => Record<U | V | V_1 | V_2 | V_3 | V_4 | V_5 | V_6 | V_7 | V_8, {
                                                                    selector: string;
                                                                    attrs: Record<"data-scope" | "data-part", string>;
                                                                }>;
                                                            }, "parts">;
                                                            build: () => Record<U | V | V_1 | V_2 | V_3 | V_4 | V_5 | V_6 | V_7, {
                                                                selector: string;
                                                                attrs: Record<"data-scope" | "data-part", string>;
                                                            }>;
                                                        }, "parts">;
                                                        build: () => Record<U | V | V_1 | V_2 | V_3 | V_4 | V_5 | V_6, {
                                                            selector: string;
                                                            attrs: Record<"data-scope" | "data-part", string>;
                                                        }>;
                                                    }, "parts">;
                                                    build: () => Record<U | V | V_1 | V_2 | V_3 | V_4 | V_5, {
                                                        selector: string;
                                                        attrs: Record<"data-scope" | "data-part", string>;
                                                    }>;
                                                }, "parts">;
                                                build: () => Record<U | V | V_1 | V_2 | V_3 | V_4, {
                                                    selector: string;
                                                    attrs: Record<"data-scope" | "data-part", string>;
                                                }>;
                                            }, "parts">;
                                            build: () => Record<U | V | V_1 | V_2 | V_3, {
                                                selector: string;
                                                attrs: Record<"data-scope" | "data-part", string>;
                                            }>;
                                        }, "parts">;
                                        build: () => Record<U | V | V_1 | V_2, {
                                            selector: string;
                                            attrs: Record<"data-scope" | "data-part", string>;
                                        }>;
                                    }, "parts">;
                                    build: () => Record<U | V | V_1, {
                                        selector: string;
                                        attrs: Record<"data-scope" | "data-part", string>;
                                    }>;
                                }, "parts">;
                                build: () => Record<U | V, {
                                    selector: string;
                                    attrs: Record<"data-scope" | "data-part", string>;
                                }>;
                            }, "parts">;
                            build: () => Record<U, {
                                selector: string;
                                attrs: Record<"data-scope" | "data-part", string>;
                            }>;
                        }, "parts">;
                        extendWith: <V_15 extends string>(...parts: V_15[]) => Omit<{
                            parts: <U extends string>(...parts: U[]) => Omit<{
                                parts: any;
                                extendWith: <V extends string>(...parts: V[]) => Omit<{
                                    parts: any;
                                    extendWith: <V_1 extends string>(...parts: V_1[]) => Omit<{
                                        parts: any;
                                        extendWith: <V_2 extends string>(...parts: V_2[]) => Omit<{
                                            parts: any;
                                            extendWith: <V_3 extends string>(...parts: V_3[]) => Omit<{
                                                parts: any;
                                                extendWith: <V_4 extends string>(...parts: V_4[]) => Omit<{
                                                    parts: any;
                                                    extendWith: <V_5 extends string>(...parts: V_5[]) => Omit<{
                                                        parts: any;
                                                        extendWith: <V_6 extends string>(...parts: V_6[]) => Omit<{
                                                            parts: any;
                                                            extendWith: <V_7 extends string>(...parts: V_7[]) => Omit<{
                                                                parts: any;
                                                                extendWith: <V_8 extends string>(...parts: V_8[]) => Omit<{
                                                                    parts: any;
                                                                    extendWith: <V_9 extends string>(...parts: V_9[]) => Omit<any, "parts">;
                                                                    build: () => Record<U | V | V_1 | V_2 | V_3 | V_4 | V_5 | V_6 | V_7 | V_8, {
                                                                        selector: string;
                                                                        attrs: Record<"data-scope" | "data-part", string>;
                                                                    }>;
                                                                }, "parts">;
                                                                build: () => Record<U | V | V_1 | V_2 | V_3 | V_4 | V_5 | V_6 | V_7, {
                                                                    selector: string;
                                                                    attrs: Record<"data-scope" | "data-part", string>;
                                                                }>;
                                                            }, "parts">;
                                                            build: () => Record<U | V | V_1 | V_2 | V_3 | V_4 | V_5 | V_6, {
                                                                selector: string;
                                                                attrs: Record<"data-scope" | "data-part", string>;
                                                            }>;
                                                        }, "parts">;
                                                        build: () => Record<U | V | V_1 | V_2 | V_3 | V_4 | V_5, {
                                                            selector: string;
                                                            attrs: Record<"data-scope" | "data-part", string>;
                                                        }>;
                                                    }, "parts">;
                                                    build: () => Record<U | V | V_1 | V_2 | V_3 | V_4, {
                                                        selector: string;
                                                        attrs: Record<"data-scope" | "data-part", string>;
                                                    }>;
                                                }, "parts">;
                                                build: () => Record<U | V | V_1 | V_2 | V_3, {
                                                    selector: string;
                                                    attrs: Record<"data-scope" | "data-part", string>;
                                                }>;
                                            }, "parts">;
                                            build: () => Record<U | V | V_1 | V_2, {
                                                selector: string;
                                                attrs: Record<"data-scope" | "data-part", string>;
                                            }>;
                                        }, "parts">;
                                        build: () => Record<U | V | V_1, {
                                            selector: string;
                                            attrs: Record<"data-scope" | "data-part", string>;
                                        }>;
                                    }, "parts">;
                                    build: () => Record<U | V, {
                                        selector: string;
                                        attrs: Record<"data-scope" | "data-part", string>;
                                    }>;
                                }, "parts">;
                                build: () => Record<U, {
                                    selector: string;
                                    attrs: Record<"data-scope" | "data-part", string>;
                                }>;
                            }, "parts">;
                            extendWith: <V_16 extends string>(...parts: V_16[]) => Omit<{
                                parts: <U extends string>(...parts: U[]) => Omit<{
                                    parts: any;
                                    extendWith: <V extends string>(...parts: V[]) => Omit<{
                                        parts: any;
                                        extendWith: <V_1 extends string>(...parts: V_1[]) => Omit<{
                                            parts: any;
                                            extendWith: <V_2 extends string>(...parts: V_2[]) => Omit<{
                                                parts: any;
                                                extendWith: <V_3 extends string>(...parts: V_3[]) => Omit<{
                                                    parts: any;
                                                    extendWith: <V_4 extends string>(...parts: V_4[]) => Omit<{
                                                        parts: any;
                                                        extendWith: <V_5 extends string>(...parts: V_5[]) => Omit<{
                                                            parts: any;
                                                            extendWith: <V_6 extends string>(...parts: V_6[]) => Omit<{
                                                                parts: any;
                                                                extendWith: <V_7 extends string>(...parts: V_7[]) => Omit<{
                                                                    parts: any;
                                                                    extendWith: <V_8 extends string>(...parts: V_8[]) => Omit<{
                                                                        parts: any;
                                                                        extendWith: <V_9 extends string>(...parts: V_9[]) => Omit<any, "parts">;
                                                                        build: () => Record<U | V | V_1 | V_2 | V_3 | V_4 | V_5 | V_6 | V_7 | V_8, {
                                                                            selector: string;
                                                                            attrs: Record<"data-scope" | "data-part", string>;
                                                                        }>;
                                                                    }, "parts">;
                                                                    build: () => Record<U | V | V_1 | V_2 | V_3 | V_4 | V_5 | V_6 | V_7, {
                                                                        selector: string;
                                                                        attrs: Record<"data-scope" | "data-part", string>;
                                                                    }>;
                                                                }, "parts">;
                                                                build: () => Record<U | V | V_1 | V_2 | V_3 | V_4 | V_5 | V_6, {
                                                                    selector: string;
                                                                    attrs: Record<"data-scope" | "data-part", string>;
                                                                }>;
                                                            }, "parts">;
                                                            build: () => Record<U | V | V_1 | V_2 | V_3 | V_4 | V_5, {
                                                                selector: string;
                                                                attrs: Record<"data-scope" | "data-part", string>;
                                                            }>;
                                                        }, "parts">;
                                                        build: () => Record<U | V | V_1 | V_2 | V_3 | V_4, {
                                                            selector: string;
                                                            attrs: Record<"data-scope" | "data-part", string>;
                                                        }>;
                                                    }, "parts">;
                                                    build: () => Record<U | V | V_1 | V_2 | V_3, {
                                                        selector: string;
                                                        attrs: Record<"data-scope" | "data-part", string>;
                                                    }>;
                                                }, "parts">;
                                                build: () => Record<U | V | V_1 | V_2, {
                                                    selector: string;
                                                    attrs: Record<"data-scope" | "data-part", string>;
                                                }>;
                                            }, "parts">;
                                            build: () => Record<U | V | V_1, {
                                                selector: string;
                                                attrs: Record<"data-scope" | "data-part", string>;
                                            }>;
                                        }, "parts">;
                                        build: () => Record<U | V, {
                                            selector: string;
                                            attrs: Record<"data-scope" | "data-part", string>;
                                        }>;
                                    }, "parts">;
                                    build: () => Record<U, {
                                        selector: string;
                                        attrs: Record<"data-scope" | "data-part", string>;
                                    }>;
                                }, "parts">;
                                extendWith: <V_17 extends string>(...parts: V_17[]) => Omit<{
                                    parts: <U extends string>(...parts: U[]) => Omit<{
                                        parts: any;
                                        extendWith: <V extends string>(...parts: V[]) => Omit<{
                                            parts: any;
                                            extendWith: <V_1 extends string>(...parts: V_1[]) => Omit<{
                                                parts: any;
                                                extendWith: <V_2 extends string>(...parts: V_2[]) => Omit<{
                                                    parts: any;
                                                    extendWith: <V_3 extends string>(...parts: V_3[]) => Omit<{
                                                        parts: any;
                                                        extendWith: <V_4 extends string>(...parts: V_4[]) => Omit<{
                                                            parts: any;
                                                            extendWith: <V_5 extends string>(...parts: V_5[]) => Omit<{
                                                                parts: any;
                                                                extendWith: <V_6 extends string>(...parts: V_6[]) => Omit<{
                                                                    parts: any;
                                                                    extendWith: <V_7 extends string>(...parts: V_7[]) => Omit<{
                                                                        parts: any;
                                                                        extendWith: <V_8 extends string>(...parts: V_8[]) => Omit<{
                                                                            parts: any;
                                                                            extendWith: <V_9 extends string>(...parts: V_9[]) => Omit<any, "parts">;
                                                                            build: () => Record<U | V | V_1 | V_2 | V_3 | V_4 | V_5 | V_6 | V_7 | V_8, {
                                                                                selector: string;
                                                                                attrs: Record<"data-scope" | "data-part", string>;
                                                                            }>;
                                                                        }, "parts">;
                                                                        build: () => Record<U | V | V_1 | V_2 | V_3 | V_4 | V_5 | V_6 | V_7, {
                                                                            selector: string;
                                                                            attrs: Record<"data-scope" | "data-part", string>;
                                                                        }>;
                                                                    }, "parts">;
                                                                    build: () => Record<U | V | V_1 | V_2 | V_3 | V_4 | V_5 | V_6, {
                                                                        selector: string;
                                                                        attrs: Record<"data-scope" | "data-part", string>;
                                                                    }>;
                                                                }, "parts">;
                                                                build: () => Record<U | V | V_1 | V_2 | V_3 | V_4 | V_5, {
                                                                    selector: string;
                                                                    attrs: Record<"data-scope" | "data-part", string>;
                                                                }>;
                                                            }, "parts">;
                                                            build: () => Record<U | V | V_1 | V_2 | V_3 | V_4, {
                                                                selector: string;
                                                                attrs: Record<"data-scope" | "data-part", string>;
                                                            }>;
                                                        }, "parts">;
                                                        build: () => Record<U | V | V_1 | V_2 | V_3, {
                                                            selector: string;
                                                            attrs: Record<"data-scope" | "data-part", string>;
                                                        }>;
                                                    }, "parts">;
                                                    build: () => Record<U | V | V_1 | V_2, {
                                                        selector: string;
                                                        attrs: Record<"data-scope" | "data-part", string>;
                                                    }>;
                                                }, "parts">;
                                                build: () => Record<U | V | V_1, {
                                                    selector: string;
                                                    attrs: Record<"data-scope" | "data-part", string>;
                                                }>;
                                            }, "parts">;
                                            build: () => Record<U | V, {
                                                selector: string;
                                                attrs: Record<"data-scope" | "data-part", string>;
                                            }>;
                                        }, "parts">;
                                        build: () => Record<U, {
                                            selector: string;
                                            attrs: Record<"data-scope" | "data-part", string>;
                                        }>;
                                    }, "parts">;
                                    extendWith: <V_18 extends string>(...parts: V_18[]) => Omit<{
                                        parts: <U extends string>(...parts: U[]) => Omit<{
                                            parts: any;
                                            extendWith: <V extends string>(...parts: V[]) => Omit<{
                                                parts: any;
                                                extendWith: <V_1 extends string>(...parts: V_1[]) => Omit<{
                                                    parts: any;
                                                    extendWith: <V_2 extends string>(...parts: V_2[]) => Omit<{
                                                        parts: any;
                                                        extendWith: <V_3 extends string>(...parts: V_3[]) => Omit<{
                                                            parts: any;
                                                            extendWith: <V_4 extends string>(...parts: V_4[]) => Omit<{
                                                                parts: any;
                                                                extendWith: <V_5 extends string>(...parts: V_5[]) => Omit<{
                                                                    parts: any;
                                                                    extendWith: <V_6 extends string>(...parts: V_6[]) => Omit<{
                                                                        parts: any;
                                                                        extendWith: <V_7 extends string>(...parts: V_7[]) => Omit<{
                                                                            parts: any;
                                                                            extendWith: <V_8 extends string>(...parts: V_8[]) => Omit<{
                                                                                parts: any;
                                                                                extendWith: <V_9 extends string>(...parts: V_9[]) => Omit<any, "parts">;
                                                                                build: () => Record<U | V | V_1 | V_2 | V_3 | V_4 | V_5 | V_6 | V_7 | V_8, {
                                                                                    selector: string;
                                                                                    attrs: Record<"data-scope" | "data-part", string>;
                                                                                }>;
                                                                            }, "parts">;
                                                                            build: () => Record<U | V | V_1 | V_2 | V_3 | V_4 | V_5 | V_6 | V_7, {
                                                                                selector: string;
                                                                                attrs: Record<"data-scope" | "data-part", string>;
                                                                            }>;
                                                                        }, "parts">;
                                                                        build: () => Record<U | V | V_1 | V_2 | V_3 | V_4 | V_5 | V_6, {
                                                                            selector: string;
                                                                            attrs: Record<"data-scope" | "data-part", string>;
                                                                        }>;
                                                                    }, "parts">;
                                                                    build: () => Record<U | V | V_1 | V_2 | V_3 | V_4 | V_5, {
                                                                        selector: string;
                                                                        attrs: Record<"data-scope" | "data-part", string>;
                                                                    }>;
                                                                }, "parts">;
                                                                build: () => Record<U | V | V_1 | V_2 | V_3 | V_4, {
                                                                    selector: string;
                                                                    attrs: Record<"data-scope" | "data-part", string>;
                                                                }>;
                                                            }, "parts">;
                                                            build: () => Record<U | V | V_1 | V_2 | V_3, {
                                                                selector: string;
                                                                attrs: Record<"data-scope" | "data-part", string>;
                                                            }>;
                                                        }, "parts">;
                                                        build: () => Record<U | V | V_1 | V_2, {
                                                            selector: string;
                                                            attrs: Record<"data-scope" | "data-part", string>;
                                                        }>;
                                                    }, "parts">;
                                                    build: () => Record<U | V | V_1, {
                                                        selector: string;
                                                        attrs: Record<"data-scope" | "data-part", string>;
                                                    }>;
                                                }, "parts">;
                                                build: () => Record<U | V, {
                                                    selector: string;
                                                    attrs: Record<"data-scope" | "data-part", string>;
                                                }>;
                                            }, "parts">;
                                            build: () => Record<U, {
                                                selector: string;
                                                attrs: Record<"data-scope" | "data-part", string>;
                                            }>;
                                        }, "parts">;
                                        extendWith: <V_19 extends string>(...parts: V_19[]) => Omit<{
                                            parts: <U extends string>(...parts: U[]) => Omit<{
                                                parts: any;
                                                extendWith: <V extends string>(...parts: V[]) => Omit<{
                                                    parts: any;
                                                    extendWith: <V_1 extends string>(...parts: V_1[]) => Omit<{
                                                        parts: any;
                                                        extendWith: <V_2 extends string>(...parts: V_2[]) => Omit<{
                                                            parts: any;
                                                            extendWith: <V_3 extends string>(...parts: V_3[]) => Omit<{
                                                                parts: any;
                                                                extendWith: <V_4 extends string>(...parts: V_4[]) => Omit<{
                                                                    parts: any;
                                                                    extendWith: <V_5 extends string>(...parts: V_5[]) => Omit<{
                                                                        parts: any;
                                                                        extendWith: <V_6 extends string>(...parts: V_6[]) => Omit<{
                                                                            parts: any;
                                                                            extendWith: <V_7 extends string>(...parts: V_7[]) => Omit<{
                                                                                parts: any;
                                                                                extendWith: <V_8 extends string>(...parts: V_8[]) => Omit<{
                                                                                    parts: any;
                                                                                    extendWith: <V_9 extends string>(...parts: V_9[]) => Omit<any, "parts">;
                                                                                    build: () => Record<U | V | V_1 | V_2 | V_3 | V_4 | V_5 | V_6 | V_7 | V_8, {
                                                                                        selector: string;
                                                                                        attrs: Record<"data-scope" | "data-part", string>;
                                                                                    }>;
                                                                                }, "parts">;
                                                                                build: () => Record<U | V | V_1 | V_2 | V_3 | V_4 | V_5 | V_6 | V_7, {
                                                                                    selector: string;
                                                                                    attrs: Record<"data-scope" | "data-part", string>;
                                                                                }>;
                                                                            }, "parts">;
                                                                            build: () => Record<U | V | V_1 | V_2 | V_3 | V_4 | V_5 | V_6, {
                                                                                selector: string;
                                                                                attrs: Record<"data-scope" | "data-part", string>;
                                                                            }>;
                                                                        }, "parts">;
                                                                        build: () => Record<U | V | V_1 | V_2 | V_3 | V_4 | V_5, {
                                                                            selector: string;
                                                                            attrs: Record<"data-scope" | "data-part", string>;
                                                                        }>;
                                                                    }, "parts">;
                                                                    build: () => Record<U | V | V_1 | V_2 | V_3 | V_4, {
                                                                        selector: string;
                                                                        attrs: Record<"data-scope" | "data-part", string>;
                                                                    }>;
                                                                }, "parts">;
                                                                build: () => Record<U | V | V_1 | V_2 | V_3, {
                                                                    selector: string;
                                                                    attrs: Record<"data-scope" | "data-part", string>;
                                                                }>;
                                                            }, "parts">;
                                                            build: () => Record<U | V | V_1 | V_2, {
                                                                selector: string;
                                                                attrs: Record<"data-scope" | "data-part", string>;
                                                            }>;
                                                        }, "parts">;
                                                        build: () => Record<U | V | V_1, {
                                                            selector: string;
                                                            attrs: Record<"data-scope" | "data-part", string>;
                                                        }>;
                                                    }, "parts">;
                                                    build: () => Record<U | V, {
                                                        selector: string;
                                                        attrs: Record<"data-scope" | "data-part", string>;
                                                    }>;
                                                }, "parts">;
                                                build: () => Record<U, {
                                                    selector: string;
                                                    attrs: Record<"data-scope" | "data-part", string>;
                                                }>;
                                            }, "parts">;
                                            extendWith: <V_20 extends string>(...parts: V_20[]) => Omit<any, "parts">;
                                            build: () => Record<"trigger" | "triggerItem" | "positioner" | "arrow" | "arrowTip" | "content" | "separator" | "item" | "optionItem" | "itemGroupLabel" | "itemGroup" | V_10 | V_11 | V_12 | V_13 | V_14 | V_15 | V_16 | V_17 | V_18 | V_19, {
                                                selector: string;
                                                attrs: Record<"data-scope" | "data-part", string>;
                                            }>;
                                        }, "parts">;
                                        build: () => Record<"trigger" | "triggerItem" | "positioner" | "arrow" | "arrowTip" | "content" | "separator" | "item" | "optionItem" | "itemGroupLabel" | "itemGroup" | V_10 | V_11 | V_12 | V_13 | V_14 | V_15 | V_16 | V_17 | V_18, {
                                            selector: string;
                                            attrs: Record<"data-scope" | "data-part", string>;
                                        }>;
                                    }, "parts">;
                                    build: () => Record<"trigger" | "triggerItem" | "positioner" | "arrow" | "arrowTip" | "content" | "separator" | "item" | "optionItem" | "itemGroupLabel" | "itemGroup" | V_10 | V_11 | V_12 | V_13 | V_14 | V_15 | V_16 | V_17, {
                                        selector: string;
                                        attrs: Record<"data-scope" | "data-part", string>;
                                    }>;
                                }, "parts">;
                                build: () => Record<"trigger" | "triggerItem" | "positioner" | "arrow" | "arrowTip" | "content" | "separator" | "item" | "optionItem" | "itemGroupLabel" | "itemGroup" | V_10 | V_11 | V_12 | V_13 | V_14 | V_15 | V_16, {
                                    selector: string;
                                    attrs: Record<"data-scope" | "data-part", string>;
                                }>;
                            }, "parts">;
                            build: () => Record<"trigger" | "triggerItem" | "positioner" | "arrow" | "arrowTip" | "content" | "separator" | "item" | "optionItem" | "itemGroupLabel" | "itemGroup" | V_10 | V_11 | V_12 | V_13 | V_14 | V_15, {
                                selector: string;
                                attrs: Record<"data-scope" | "data-part", string>;
                            }>;
                        }, "parts">;
                        build: () => Record<"trigger" | "triggerItem" | "positioner" | "arrow" | "arrowTip" | "content" | "separator" | "item" | "optionItem" | "itemGroupLabel" | "itemGroup" | V_10 | V_11 | V_12 | V_13 | V_14, {
                            selector: string;
                            attrs: Record<"data-scope" | "data-part", string>;
                        }>;
                    }, "parts">;
                    build: () => Record<"trigger" | "triggerItem" | "positioner" | "arrow" | "arrowTip" | "content" | "separator" | "item" | "optionItem" | "itemGroupLabel" | "itemGroup" | V_10 | V_11 | V_12 | V_13, {
                        selector: string;
                        attrs: Record<"data-scope" | "data-part", string>;
                    }>;
                }, "parts">;
                build: () => Record<"trigger" | "triggerItem" | "positioner" | "arrow" | "arrowTip" | "content" | "separator" | "item" | "optionItem" | "itemGroupLabel" | "itemGroup" | V_10 | V_11 | V_12, {
                    selector: string;
                    attrs: Record<"data-scope" | "data-part", string>;
                }>;
            }, "parts">;
            build: () => Record<"trigger" | "triggerItem" | "positioner" | "arrow" | "arrowTip" | "content" | "separator" | "item" | "optionItem" | "itemGroupLabel" | "itemGroup" | V_10 | V_11, {
                selector: string;
                attrs: Record<"data-scope" | "data-part", string>;
            }>;
        }, "parts">;
        build: () => Record<"trigger" | "triggerItem" | "positioner" | "arrow" | "arrowTip" | "content" | "separator" | "item" | "optionItem" | "itemGroupLabel" | "itemGroup" | V_10, {
            selector: string;
            attrs: Record<"data-scope" | "data-part", string>;
        }>;
    }, "parts">;
    build: () => Record<"trigger" | "triggerItem" | "positioner" | "arrow" | "arrowTip" | "content" | "separator" | "item" | "optionItem" | "itemGroupLabel" | "itemGroup", {
        selector: string;
        attrs: Record<"data-scope" | "data-part", string>;
    }>;
}, "parts">;

type ElementIds = Partial<{
    trigger: string;
    contextTrigger: string;
    content: string;
    label(id: string): string;
    group(id: string): string;
}>;
type PublicContext = DirectionProperty & CommonProperties & {
    /**
     * The ids of the elements in the menu. Useful for composition.
     */
    ids?: ElementIds;
    /**
     * The values of radios and checkboxes in the menu.
     */
    value?: Record<string, string | string[]>;
    /**
     * Callback to be called when the menu values change (for radios and checkboxes).
     */
    onValueChange?: (details: {
        name: string;
        value: string | string[];
    }) => void;
    /**
     * The `id` of the active menu item.
     */
    highlightedId: string | null;
    /**
     * Function called when a menu item is selected.
     */
    onSelect?: (value: string) => void;
    /**
     * The positioning point for the menu. Can be set by the context menu trigger or the button trigger.
     */
    anchorPoint: Point | null;
    /**
     * Whether to loop the keyboard navigation.
     */
    loop: boolean;
    /**
     * The options used to dynamically position the menu
     */
    positioning: PositioningOptions;
    /**
     * Whether to close the menu when an option is selected
     */
    closeOnSelect: boolean;
    /**
     * The accessibility label for the menu
     */
    "aria-label"?: string;
    /**
     * Function called when the menu is opened
     */
    onOpen?: () => void;
    /**
     * Function called when the menu is closed
     */
    onClose?: () => void;
};
type UserDefinedContext = RequiredBy<PublicContext, "id">;
type ComputedContext = Readonly<{
    /**
     * @computed
     * Whether the menu is a submenu (has a parent menu)
     */
    readonly isSubmenu: boolean;
    /**
     * @computed
     * Whether the writing direction is rtl
     */
    readonly isRtl: boolean;
    /**
     * @computed
     * Whether a typeahead search is ongoing
     */
    readonly isTypingAhead: boolean;
}>;
type PrivateContext = Context<{}>;
type MachineContext = PublicContext & PrivateContext & ComputedContext;
type MachineState = {
    value: "unknown" | "idle" | "open" | "closed" | "opening" | "closing" | "opening:contextmenu";
    tags: "visible";
};
type State = StateMachine.State<MachineContext, MachineState>;
type Send = StateMachine.Send<StateMachine.AnyEventObject>;
type Service = Machine<MachineContext, MachineState>;
type Api = {
    getItemProps: (opts: ItemProps) => Record<string, any>;
    triggerProps: Record<string, any>;
};
type ItemProps = {
    /**
     * The `id` of the menu item option.
     */
    id: string;
    /**
     * Whether the menu item is disabled
     */
    disabled?: boolean;
    /**
     * The textual value of the option. Used in typeahead navigation of the menu.
     * If not provided, the text content of the menu item will be used.
     */
    valueText?: string;
    /**
     * Whether the menu should be closed when the option is selected.
     */
    closeOnSelect?: boolean;
};
type OptionItemProps = Partial<ItemProps> & {
    /**
     * The option's name as specified in menu's `context.values` object
     */
    name: string;
    /**
     * Whether the option is a radio or a checkbox
     */
    type: "radio" | "checkbox";
    /**
     * The value of the option
     */
    value: string;
    /**
     * Function called when the option state is changed
     */
    onCheckedChange?: (checked: boolean) => void;
};
type GroupProps = {
    /**
     * The `id` of the element that provides accessibility label to the option group
     */
    id: string;
};
type LabelProps = {
    /**
     * The `id` of the group this refers to
     */
    htmlFor: string;
};

declare function connect<T extends PropTypes>(state: State, send: Send, normalize: NormalizeProps<T>): {
    isOpen: boolean;
    open(): void;
    close(): void;
    highlightedId: string | null;
    setHighlightedId(id: string): void;
    setParent(parent: Service): void;
    setChild(child: Service): void;
    value: Record<string, string | string[]> | undefined;
    setValue(name: string, value: any): void;
    isOptionChecked(opts: OptionItemProps): boolean | undefined;
    contextTriggerProps: T["element"];
    getTriggerItemProps<A extends Api>(childApi: A): T["element"];
    triggerProps: T["button"];
    positionerProps: T["element"];
    arrowProps: T["element"];
    arrowTipProps: T["element"];
    contentProps: T["element"];
    separatorProps: T["element"];
    getItemProps(options: ItemProps): T["element"];
    getOptionItemProps(option: OptionItemProps): T["element"];
    getItemGroupLabelProps(options: LabelProps): T["element"];
    getItemGroupProps(options: GroupProps): T["element"];
};

declare function machine(userContext: UserDefinedContext): _zag_js_core.Machine<MachineContext, MachineState, _zag_js_core.StateMachine.AnyEventObject>;

export { UserDefinedContext as Context, anatomy, connect, machine };
