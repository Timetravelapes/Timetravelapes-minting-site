type Part = {
    selector: string;
    attrs: Record<"data-scope" | "data-part", string>;
};
type Anatomy<T extends string> = {
    parts: <U extends string>(...parts: U[]) => Omit<Anatomy<U>, "parts">;
    extendWith: <V extends string>(...parts: V[]) => Omit<Anatomy<T | V>, "parts">;
    build: () => Record<T, Part>;
};
declare const createAnatomy: <T extends string>(name: string, parts?: T[]) => Anatomy<T>;

export { createAnatomy };
